# Назва вашого workflow, яка буде відображатися у вкладці Actions
name: Run API Tests and Publish Report

# Тригери для запуску: при пуші в гілку main або створенні Pull Request до неї
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Назва задачі
  run-tests-and-publish:
    # Запускаємо на віртуальній машині з останньою версією Ubuntu
    runs-on: ubuntu-latest
    
    # ВАЖЛИВО: Додаємо дозволи для запису, щоб екшен міг публікувати звіт на GitHub Pages
    permissions:
      contents: write

    steps:
      # Крок 1: Клонуємо код репозиторію на віртуальну машину
      - name: Checkout repository
        uses: actions/checkout@v4

      # Крок 2: Встановлюємо потрібну версію Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Крок 3: Встановлюємо Java, яка необхідна для роботи Allure
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      # Крок 4: Встановлюємо Allure Commandline вручну (найнадійніший спосіб)
      - name: Install Allure Commandline manually
        run: |
          # Завантажуємо архів
          wget https://github.com/allure-framework/allure2/releases/download/2.29.0/allure-2.29.0.tgz
          # Розархівовуємо у /opt/
          sudo tar -zxvf allure-2.29.0.tgz -C /opt/
          # Створюємо символічне посилання, щоб команда 'allure' була доступна глобально
          sudo ln -s /opt/allure-2.29.0/bin/allure /usr/bin/allure
          # Перевіряємо, що все встановлено коректно
          allure --version

      # Крок 5: Встановлюємо залежності Python
      - name: Install dependencies
        run: pip install -r requirements.txt
      
      # Крок 6: Запускаємо тести, передаючи секрети
      - name: Run Pytest
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          API_KEY: ${{ secrets.API_KEY }}
        run: pytest --alluredir=allure-results
        # `continue-on-error: true` дозволяє генерувати звіт, навіть якщо тести впали
        continue-on-error: true

      # Крок 7: Генеруємо статичний HTML-звіт з результатів тестів
      - name: Generate Allure Report
        run: allure generate allure-results --clean -o allure-report

      # Крок 8: Публікуємо згенерований звіт на GitHub Pages
      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          # Вбудований токен для авторизації
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Вказуємо теку, яку потрібно опублікувати
          publish_dir: ./allure-report