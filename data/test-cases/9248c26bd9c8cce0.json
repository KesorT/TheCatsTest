{"uid":"9248c26bd9c8cce0","name":"test_post_vote[6-expected_status2-Invalid vote value 6]","fullName":"tests.test_votes#test_post_vote","historyId":"01befccf013e6bff2f4e9613a58cedd3","time":{"start":1759132673180,"stop":1759132673719,"duration":539},"status":"failed","statusMessage":"AssertionError: Unexpected status code: 201\nassert 201 in [400]\n +  where 201 = <Response [201]>.status_code","statusTrace":"user_client = <api_clients.user_api_client.UserApiClient object at 0x7fe32b34b010>\nimage_id = {'breeds': [], 'height': 1440, 'id': 'MjA0MjQ4NQ', 'url': 'https://cdn2.thecatapi.com/images/MjA0MjQ4NQ.jpg', ...}\nvote_value = 6, expected_status = [400], comment = 'Invalid vote value 6'\n\n    @pytest.mark.parametrize(\n            \"vote_value, expected_status, comment\",\n            [\n                (1, [200, 201], \"Valid vote value 1\"),\n                (0, [400], \"Invalid vote value 0\"),\n                (6, [400], \"Invalid vote value 6\"),\n                (-1, [400], \"Invalid negative vote value\"),\n                (\"a\", [400], \"Invalid non-integer vote value\"),\n            ]\n    )\n    def test_post_vote(user_client, image_id, vote_value, expected_status, comment):\n        vote_data = {\n            \"image_id\": image_id[\"id\"],\n            \"value\": vote_value\n        }\n        response = user_client.post_vote(vote_data)\n>       assert response.status_code in expected_status, f\"Unexpected status code: {response.status_code}\"\nE       AssertionError: Unexpected status code: 201\nE       assert 201 in [400]\nE        +  where 201 = <Response [201]>.status_code\n\ntests/test_votes.py:49: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"user_client","time":{"start":1759132658382,"stop":1759132658382,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"image_id","time":{"start":1759132672778,"stop":1759132673179,"duration":401},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unexpected status code: 201\nassert 201 in [400]\n +  where 201 = <Response [201]>.status_code","statusTrace":"user_client = <api_clients.user_api_client.UserApiClient object at 0x7fe32b34b010>\nimage_id = {'breeds': [], 'height': 1440, 'id': 'MjA0MjQ4NQ', 'url': 'https://cdn2.thecatapi.com/images/MjA0MjQ4NQ.jpg', ...}\nvote_value = 6, expected_status = [400], comment = 'Invalid vote value 6'\n\n    @pytest.mark.parametrize(\n            \"vote_value, expected_status, comment\",\n            [\n                (1, [200, 201], \"Valid vote value 1\"),\n                (0, [400], \"Invalid vote value 0\"),\n                (6, [400], \"Invalid vote value 6\"),\n                (-1, [400], \"Invalid negative vote value\"),\n                (\"a\", [400], \"Invalid non-integer vote value\"),\n            ]\n    )\n    def test_post_vote(user_client, image_id, vote_value, expected_status, comment):\n        vote_data = {\n            \"image_id\": image_id[\"id\"],\n            \"value\": vote_value\n        }\n        response = user_client.post_vote(vote_data)\n>       assert response.status_code in expected_status, f\"Unexpected status code: {response.status_code}\"\nE       AssertionError: Unexpected status code: 201\nE       assert 201 in [400]\nE        +  where 201 = <Response [201]>.status_code\n\ntests/test_votes.py:49: AssertionError","steps":[],"attachments":[{"uid":"c4f69b0b6e43f776","name":"stdout","source":"c4f69b0b6e43f776.txt","type":"text/plain","size":39}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"image_id::0","time":{"start":1759132673723,"stop":1759132673963,"duration":240},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_votes"},{"name":"host","value":"runnervm3ublj"},{"name":"thread","value":"2177-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_votes"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"comment","value":"'Invalid vote value 6'"},{"name":"expected_status","value":"[400]"},{"name":"vote_value","value":"6"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"83d28c272a47f124","status":"failed","statusDetails":"AssertionError: Unexpected status code: 201\nassert 201 in [400]\n +  where 201 = <Response [201]>.status_code","time":{"start":1759064020499,"stop":1759064021184,"duration":685}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"9248c26bd9c8cce0.json","parameterValues":["'Invalid vote value 6'","[400]","6"]}